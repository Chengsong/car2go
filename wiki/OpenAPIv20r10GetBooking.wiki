#summary GetBooking (v2.0 rev1.0)

[OpenAPIv20r10FunctionIndex Function Index]

<h1>Get booking  (v2.0 rev1.0)</h1><p>Provides the detailed information of a recently booked vehicle for the current user. The vehicle must have been assigned to   the authenticated user. Access to this function is restricted. See [OpenAPIOAuthr10 OAuth  documentation] for more details.</p><table class="funcdetail"><tr><td class="funcdetailheader">Access:</td><td>protected</td></tr><tr><td class="funcdetailheader">URL:</td><td>https://www.car2go.com/api/v2.0/booking</td></tr><tr><td class="funcdetailheader">Method:</td><td>GET</td></tr></table>
<h3>Parameters</h3><table class="parameters"><thead><tr><th>Name</th><th>Mandatory</th><th>Description</th></tr></thead><tbody><tr><td>loc</td><td>true</td><td> location identifier string of the user's home location, e.g. "ulm", "austin".</td></tr><tr><td>format</td><td>false</td><td> defines response format. Value "json" => JSON format, otherwise xml format is used</td></tr></tbody></table>
<h3>Request Examples</h3><div class="sample"><pre>GET https://www.car2go.com/api/v2.0/booking?loc=austin</pre></div><div class="sample"><pre>GET https://www.car2go.com/api/v2.0/booking?loc=ulm</pre></div>
<h3>Response</h3>Booking details of the current reserved car consists of:
                  <ul>
                  <li>returnValue - see list of return codes below and  <a href="index.html#returnvalues">return values</a> for more details</li>
                  </ul>
                  <ul>
                  <li>a unique booking Id</li>
                  <li>a reservation time: date time string, according to ISO 8601, e.g. 2010-01-21T13:05+01:00</li>
                  <li>a booking position: longitude and latitude of booking</li>
                  <li>account information: id and description of the account which will be charged</li>
                  <li>detailed vehicle information (optional, depends on whether a vehicles has already been assigned or not)
                  <ul>
                  <li>vin unique, textual vehicle identifier</li>
                  <li>numberPlate number plate of vehicle, e.g. used to identify car on the streetr</li>
                  <li>fuel level</li>
                  <li>interior</li>
                  <li>exterior</li>
                  <li>position: longitude and latitude of vehicle</li>
                  </ul>
                  </li>
                  </ul>
<h3>Response Examples</h3>
<div class="sample">A XML response example of reserved vehicle:
 
<blockquote>
{{{<bookingResponse xmlns="http://www.car2go.com/openapi/xmlschema">}}}
  	{{{<returnValue>}}}
 	  {{{<code>}}}0{{{</code>}}} 
 	  {{{<description>}}}Operation successful.{{{</description>}}} 
 	{{{</returnValue>}}}
  	{{{<booking>}}}
 		  {{{<bookingId>}}}2910{{{</bookingId>}}} 
 		  {{{<reservationTime>}}}2010-03-29T09:00:00+01:00{{{</reservationTime>}}} 
 	 	{{{<bookingposition>}}}
 		  {{{<latitude>}}}48.423291{{{</latitude>}}} 
 		  {{{<longitude>}}}9.939559{{{</longitude>}}} 
 		  {{{<address>}}}Daimler Mitarbeiterparkplatz, Wilhelm-Runge-Straße{{{</address>}}} 
 	  	{{{</bookingposition>}}}
 	 	{{{<account>}}}
 		  {{{<accountId>}}}1002{{{</accountId>}}} 
 		  {{{<description>}}}Max Mustermann1002{{{</description>}}} 
 	  	{{{</account>}}}
 	 	{{{<vehicle>}}}
 		  {{{<vin>}}}WME0000000K000010{{{</vin>}}} 
 		  {{{<numberPlate>}}}UL-C1010{{{</numberPlate>}}} 
 		  {{{<fuel>}}}90{{{</fuel>}}} 
 		  {{{<interior>}}}EXCELLENT{{{</interior>}}} 
 		  {{{<exterior>}}}EXCELLENT{{{</exterior>}}} 
 		 	{{{<position>}}}
 			  {{{<latitude>}}}48.42188{{{</latitude>}}} 
 			  {{{<longitude>}}}9.9411{{{</longitude>}}} 
 			  {{{<address>}}}Wilhelm-Runge-Straße 10, 89081 Ulm{{{</address>}}}
 			{{{</position>}}}
 	  	{{{</vehicle>}}}
   	{{{</booking>}}}
   {{{</bookingResponse>}}}
</blockquote></div>
<h3>Return Codes</h3>The following return codes may occur:<table><thead><tr><th>Code</th><th>Description</th><th>Note</th></tr></thead><tr><td>0</td><td>Operation successful.</td><td></td></tr><tr><td>1</td><td>Location invalid.</td><td></td></tr><tr><td>3</td><td>No valid accounts found.</td><td> The user has no valid accounts. This occurs when the user has no account and is not invited to any accounts.</td></tr><tr><td>4</td><td>Not all necessary url parameters provided.</td><td></td></tr><tr><td>5</td><td>A technical error occured.</td><td> This error can occur in case of application problems. If this error persist, please report the bug.</td></tr><tr><td>12</td><td>No reserved vehicle found.</td><td></td></tr></table>

<div class="footer">&copy; 2010 car2go GmbH. All rights reserved. Generated 18.05.10 02:04</div>